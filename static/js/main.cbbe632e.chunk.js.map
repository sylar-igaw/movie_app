{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","rating","className","src","alt","map","genre","index","key","length","slice","App","props","state","isLoading","movie","getMovies","a","async","axios","get","movies","data","console","log","setState","this","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0SAiCeA,MA9Bf,YAAkE,EAAjDC,GAAkD,IAA9CC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,OAAeC,GAAQ,EAAhBC,OAAgB,EAARD,QACtD,OACE,yBAAKE,UAAU,SACb,yBAAKC,IAAKJ,EAAQK,IAAKP,EAAOA,MAAOA,IACrC,yBAAKK,UAAU,eACb,wBAAIA,UAAU,gBAAgBL,GAC9B,wBAAIK,UAAU,eAAeN,GAC7B,wBAAIM,UAAU,iBACXF,EAAOK,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKD,EAAOL,UAAU,iBACvBI,OAIP,uBAAGJ,UAAU,kBAAkBJ,EAAQW,OAAS,IAAMX,EAAQY,MAAM,EAAG,KAAM,MAAQZ,MC0ChFa,G,wBApDb,WAAYC,GAAO,IAAD,8BAChB,4CAAMA,KAGRC,MAAQ,CACNC,WAAY,EACZC,MAAQ,IANQ,EAmClBC,UAAY,4BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAKAE,IAAMC,IAAI,6DALV,gBAGGC,EAHH,EAERC,KACEA,KAASD,OAGbE,QAAQC,IAAIH,GACZ,EAAKI,SAAS,CAACJ,SAAQP,WAAU,IAPvB,sCAjCVS,QAAQC,IAAI,eAFI,E,sEAQR,IAAD,EACqBE,KAAKb,MAA1BC,EADA,EACAA,UAAWO,EADX,EACWA,OAClB,OACE,6BAASnB,UAAU,aAChBY,EACC,yBAAKZ,UAAU,UACX,0BAAMA,UAAU,gBAAhB,eAGF,yBAAKA,UAAU,UACZmB,EAAOhB,KAAI,SAAAU,GAAK,OACf,kBAAC,EAAD,CACEP,IAAKO,EAAMpB,GACXA,GAAIoB,EAAMpB,GACVC,KAAMmB,EAAMnB,KACZC,MAAOkB,EAAMlB,MACbC,QAASiB,EAAMjB,QACfC,OAAQgB,EAAMY,mBACd1B,OAAQc,EAAMd,OACdD,OAAUe,EAAMf,gB,0CAkB9B0B,KAAKV,gB,GA9CSY,IAAMC,YCDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.cbbe632e.chunk.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Movie ({id, year, title, summary, poster,rating, genres}){\r\n    return (\r\n      <div className=\"movie\">\r\n        <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie__data\">\r\n          <h3 className=\"movie__title\">{title}</h3>\r\n          <h5 className=\"movie__year\">{year}</h5>\r\n          <ul className=\"movie__genres\">\r\n            {genres.map((genre, index) => (\r\n              <li key={index} className=\"genres__genre\">\r\n                {genre}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <p className=\"movie__summary\">{summary.length > 180 ? summary.slice(0, 180) +\"...\" : summary}</p>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n\r\n  Movie.propTypes = {\r\n    id : PropTypes.number.isRequired,\r\n    year : PropTypes.number.isRequired,\r\n    title : PropTypes.string.isRequired,\r\n    summary : PropTypes.string.isRequired, \r\n    poster : PropTypes.string.isRequired,\r\n    rating : PropTypes.number,\r\n    genres : PropTypes.arrayOf(PropTypes.string).isRequired\r\n  };\r\nexport default Movie;","import React from 'react';\nimport axios from 'axios';\nimport Movie from './Movie'\nimport \"./App.css\"\nimport \"./Movie.css\"\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    console.log('constructor');\n  }\n  state = {\n    isLoading : true,\n    movie : []\n  };\n  render() {\n    const {isLoading, movies} = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n              <span className=\"loader__text\">Loading...</span>\n          </div>\n          ): (\n            <div className=\"movies\">\n              {movies.map(movie => (  \n                <Movie \n                  key={movie.id} \n                  id={movie.id} \n                  year={movie.year} \n                  title={movie.title} \n                  summary={movie.summary} \n                  poster={movie.medium_cover_image} \n                  rating={movie.rating}\n                  genres = {movie.genres}\n                  ></Movie>\n              ))}\n            </div>\n          )\n        }\n      </section>\n    )}\n  getMovies = async () => {\n    const {\n      data : {\n        data : { movies }\n      }\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    console.log(movies);\n    this.setState({movies, isLoading:false });\n  }\n  componentDidMount(){\n    this.getMovies();\n    \n\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}